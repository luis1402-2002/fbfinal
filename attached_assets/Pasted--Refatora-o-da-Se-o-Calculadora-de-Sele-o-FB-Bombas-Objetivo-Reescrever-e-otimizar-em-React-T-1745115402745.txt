 Refatoração da Seção “Calculadora de Seleção” FB Bombas

Objetivo: Reescrever e otimizar em React/TypeScript a seção de “Calculadora de Seleção” do site da FB Bombas, incluindo todas as curvas e modelos (FBCN, FBOT, FBE) que a empresa comercializa.
Tom: profissional, modular, acessível e voltado à melhor experiência do usuário B2B.
Entrega: componente React limpo, documentado e testável, pronto para integração imediata no site.

1. Contexto
A FB Bombas oferece três famílias de bombas:

FBCN (centrífugas normalizadas) em rotações 1750 rpm e 3500 rpm

FBOT (óleo térmico) em rotações 1750 rpm e 3500 rpm

FBE (engrenagem externa) em rotações 1750 rpm, 1150 rpm e 850 rpm

Cada modelo possui curvas de desempenho (vazão × altura), eficiência, NPSH e potência.

O objetivo é que o cliente selecione parâmetros (vazão, altura, viscosidade, densidade, temperatura, tipo de bomba e rotação) e obtenha:

Bomba recomendada

Gráficos (curva da bomba, eficiência e curva do sistema) responsivos

Recomendações técnicas específicas para cada caso

2. Instruções de Alto Nível
Papel da IA: “Você é um engenheiro front‑end sênior especialista em React, TypeScript e UX B2B.”

Tarefa:

Refatorar o componente PumpCalculatorSection (código abaixo) para torná‑lo:

Modular: separar lógicas em hooks e utilitários.

Extensível: fácil de acrescentar novas curvas/rotations.

Acessível: WAI‑ARIA, labels, descrições e navegação por teclado.

Internacionalizável: manter chaves t(…), sem texto hard‑coded.

Testável: exportar lógica pura para unit tests (Jest).

Performático: usar useMemo / useCallback, evitar recalculos desnecessários.

Inserir todas as curvas (FBCN, FBOT, FBE) presentes nos documentos técnicos.

Garantir responsividade para mobile e desktop, mantendo estilo da marca (azul, vermelho) via Tailwind CSS.

Formato de saída:

Fornecer um único componente React (ou vários arquivos se necessário), com:

Comentários JSDoc para props e funções principais.

Instruções de uso no README.

Exemplo de teste unitário para a função de seleção de bomba.

Restrições:

Não remova nenhuma funcionalidade existente.

Mantenha compatibilidade com Contexto de idioma (useLanguage).

Preserve a UI (Tabs, Sliders, Cards, Gráficos), mas melhore usabilidade, loading states e mensagens de erro.

3. Código de Referência
<details> <summary>🚀 Clique para expandir o código atual `PumpCalculatorSection`</summary>
tsx
Copiar
Editar
// [Cole aqui o código completo que você enviou acima]
</details>
4. Critérios de Aceitação
✅ Funcionalidade: a calculadora deve gerar mesmo resultado (pumpModel, eficiência, potência, NPSH, recomendações).

✅ Modularidade: lógicas extraídas para hooks como useSystemCurve, usePumpSelection.

✅ Acessibilidade: componentes navegáveis por teclado, labels associados, alertas de erro acessíveis.

✅ Internacionalização: todo texto via t("…").

✅ Performance: curvas e cálculos memoizados para evitar re‑renderizações desnecessárias.

✅ Documentação: README breve explicando props, hooks e instruções de teste.

✅ Testes: ao menos 1 unit test para a função que determina o modelo ideal.